{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nconst useRecorder = onStop => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    // 嘗試用 m4a (audio/mp4) 格式錄音，若不支援則 fallback\n    let mimeType = '';\n    if (MediaRecorder.isTypeSupported('audio/mp4')) {\n      mimeType = 'audio/mp4';\n    } else if (MediaRecorder.isTypeSupported('audio/webm')) {\n      mimeType = 'audio/webm';\n    } else {\n      mimeType = 'audio/wav';\n    }\n    mediaRecorderRef.current = new window.MediaRecorder(stream, {\n      mimeType\n    });\n    chunksRef.current = [];\n    mediaRecorderRef.current.ondataavailable = e => {\n      if (e.data.size > 0) chunksRef.current.push(e.data);\n    };\n    mediaRecorderRef.current.onstop = () => {\n      const blob = new Blob(chunksRef.current, {\n        type: mimeType\n      });\n      onStop(blob);\n    };\n    mediaRecorderRef.current.start();\n    setRecording(true);\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n  return {\n    recording,\n    startRecording,\n    stopRecording\n  };\n};\n_s(useRecorder, \"BVEtJSUBCsfe2+TcDjhEqTf8B44=\");\nexport default useRecorder;","map":{"version":3,"names":["useState","useRef","useRecorder","onStop","_s","recording","setRecording","mediaRecorderRef","chunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mimeType","MediaRecorder","isTypeSupported","current","window","ondataavailable","e","data","size","push","onstop","blob","Blob","type","start","stopRecording","stop"],"sources":["/Users/wenhsu/Documents/my_project/whisper/frontend/src/hooks/useRecorder.js"],"sourcesContent":["import { useState, useRef } from 'react';\n\nconst useRecorder = (onStop) => {\n  const [recording, setRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    // 嘗試用 m4a (audio/mp4) 格式錄音，若不支援則 fallback\n    let mimeType = '';\n    if (MediaRecorder.isTypeSupported('audio/mp4')) {\n      mimeType = 'audio/mp4';\n    } else if (MediaRecorder.isTypeSupported('audio/webm')) {\n      mimeType = 'audio/webm';\n    } else {\n      mimeType = 'audio/wav';\n    }\n    mediaRecorderRef.current = new window.MediaRecorder(stream, { mimeType });\n    chunksRef.current = [];\n    mediaRecorderRef.current.ondataavailable = (e) => {\n      if (e.data.size > 0) chunksRef.current.push(e.data);\n    };\n    mediaRecorderRef.current.onstop = () => {\n      const blob = new Blob(chunksRef.current, { type: mimeType });\n      onStop(blob);\n    };\n    mediaRecorderRef.current.start();\n    setRecording(true);\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n    }\n  };\n\n  return { recording, startRecording, stopRecording };\n};\n\nexport default useRecorder;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAExC,MAAMC,WAAW,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMO,gBAAgB,GAAGN,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMO,SAAS,GAAGP,MAAM,CAAC,EAAE,CAAC;EAE5B,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzE;IACA,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIC,aAAa,CAACC,eAAe,CAAC,WAAW,CAAC,EAAE;MAC9CF,QAAQ,GAAG,WAAW;IACxB,CAAC,MAAM,IAAIC,aAAa,CAACC,eAAe,CAAC,YAAY,CAAC,EAAE;MACtDF,QAAQ,GAAG,YAAY;IACzB,CAAC,MAAM;MACLA,QAAQ,GAAG,WAAW;IACxB;IACAR,gBAAgB,CAACW,OAAO,GAAG,IAAIC,MAAM,CAACH,aAAa,CAACN,MAAM,EAAE;MAAEK;IAAS,CAAC,CAAC;IACzEP,SAAS,CAACU,OAAO,GAAG,EAAE;IACtBX,gBAAgB,CAACW,OAAO,CAACE,eAAe,GAAIC,CAAC,IAAK;MAChD,IAAIA,CAAC,CAACC,IAAI,CAACC,IAAI,GAAG,CAAC,EAAEf,SAAS,CAACU,OAAO,CAACM,IAAI,CAACH,CAAC,CAACC,IAAI,CAAC;IACrD,CAAC;IACDf,gBAAgB,CAACW,OAAO,CAACO,MAAM,GAAG,MAAM;MACtC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACnB,SAAS,CAACU,OAAO,EAAE;QAAEU,IAAI,EAAEb;MAAS,CAAC,CAAC;MAC5DZ,MAAM,CAACuB,IAAI,CAAC;IACd,CAAC;IACDnB,gBAAgB,CAACW,OAAO,CAACW,KAAK,CAAC,CAAC;IAChCvB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMwB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIvB,gBAAgB,CAACW,OAAO,EAAE;MAC5BX,gBAAgB,CAACW,OAAO,CAACa,IAAI,CAAC,CAAC;MAC/BzB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAED,SAAS;IAAEI,cAAc;IAAEqB;EAAc,CAAC;AACrD,CAAC;AAAC1B,EAAA,CArCIF,WAAW;AAuCjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}