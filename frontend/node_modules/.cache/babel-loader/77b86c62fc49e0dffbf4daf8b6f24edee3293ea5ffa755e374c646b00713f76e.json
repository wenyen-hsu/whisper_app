{"ast":null,"code":"import axios from 'axios';\nexport const uploadAudio = async (file, savePath, onUploadProgress) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  if (savePath) formData.append('save_path', savePath);\n  return axios.post('/api/transcribe', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    },\n    onUploadProgress\n  });\n};\nexport const fetchServerDirs = async (base = 'uploads/') => {\n  const res = await axios.get('/api/list_dirs', {\n    params: {\n      base\n    }\n  });\n  return res.data.dirs;\n};","map":{"version":3,"names":["axios","uploadAudio","file","savePath","onUploadProgress","formData","FormData","append","post","headers","fetchServerDirs","base","res","get","params","data","dirs"],"sources":["/Users/wenhsu/Documents/my_project/whisper/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nexport const uploadAudio = async (file, savePath, onUploadProgress) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  if (savePath) formData.append('save_path', savePath);\n  return axios.post('/api/transcribe', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' },\n    onUploadProgress,\n  });\n};\n\nexport const fetchServerDirs = async (base = 'uploads/') => {\n  const res = await axios.get('/api/list_dirs', { params: { base } });\n  return res.data.dirs;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,EAAEC,gBAAgB,KAAK;EACrE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;EAC7B,IAAIC,QAAQ,EAAEE,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEJ,QAAQ,CAAC;EACpD,OAAOH,KAAK,CAACQ,IAAI,CAAC,iBAAiB,EAAEH,QAAQ,EAAE;IAC7CI,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB,CAAC;IAClDL;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,eAAe,GAAG,MAAAA,CAAOC,IAAI,GAAG,UAAU,KAAK;EAC1D,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gBAAgB,EAAE;IAAEC,MAAM,EAAE;MAAEH;IAAK;EAAE,CAAC,CAAC;EACnE,OAAOC,GAAG,CAACG,IAAI,CAACC,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}