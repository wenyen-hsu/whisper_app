{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { uploadAudio } from '../services/api';\nconst useUpload = () => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  // 新增 savePath 參數\n  const upload = async (file, savePath) => {\n    setUploading(true);\n    setProgress(0);\n    setError(null);\n    setResult(null);\n    console.log('準備上傳檔案:', file, 'size:', file === null || file === void 0 ? void 0 : file.size);\n    try {\n      const response = await uploadAudio(file, savePath, e => {\n        if (e.total) setProgress(Math.round(e.loaded * 100 / e.total));\n      });\n      setResult(response.data);\n    } catch (err) {\n      // 更詳細的錯誤訊息顯示\n      if (err.response) {\n        var _err$response$data;\n        setError(`伺服器錯誤 (${err.response.status}): ` + (((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || JSON.stringify(err.response.data)));\n      } else if (err.request) {\n        setError('無法連線到伺服器，請確認後端 API 是否啟動');\n      } else {\n        setError('未知錯誤: ' + err.message);\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n  return {\n    uploading,\n    progress,\n    result,\n    error,\n    upload\n  };\n};\n_s(useUpload, \"42Am1O6PtBgKl7IWzP3lerihfVc=\");\nexport default useUpload;","map":{"version":3,"names":["useState","uploadAudio","useUpload","_s","uploading","setUploading","progress","setProgress","result","setResult","error","setError","upload","file","savePath","console","log","size","response","e","total","Math","round","loaded","data","err","_err$response$data","status","message","JSON","stringify","request"],"sources":["/Users/wenhsu/Documents/my_project/whisper/frontend/src/hooks/useUpload.js"],"sourcesContent":["import { useState } from 'react';\nimport { uploadAudio } from '../services/api';\n\nconst useUpload = () => {\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  // 新增 savePath 參數\n  const upload = async (file, savePath) => {\n    setUploading(true);\n    setProgress(0);\n    setError(null);\n    setResult(null);\n    console.log('準備上傳檔案:', file, 'size:', file?.size);\n    try {\n      const response = await uploadAudio(file, savePath, (e) => {\n        if (e.total) setProgress(Math.round((e.loaded * 100) / e.total));\n      });\n      setResult(response.data);\n    } catch (err) {\n      // 更詳細的錯誤訊息顯示\n      if (err.response) {\n        setError(\n          `伺服器錯誤 (${err.response.status}): ` +\n          (err.response.data?.message || JSON.stringify(err.response.data))\n        );\n      } else if (err.request) {\n        setError('無法連線到伺服器，請確認後端 API 是否啟動');\n      } else {\n        setError('未知錯誤: ' + err.message);\n      }\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return { uploading, progress, result, error, upload };\n};\n\nexport default useUpload;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,iBAAiB;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMY,MAAM,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;IACvCT,YAAY,CAAC,IAAI,CAAC;IAClBE,WAAW,CAAC,CAAC,CAAC;IACdI,QAAQ,CAAC,IAAI,CAAC;IACdF,SAAS,CAAC,IAAI,CAAC;IACfM,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,IAAI,EAAE,OAAO,EAAEA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,IAAI,CAAC;IACjD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,WAAW,CAACY,IAAI,EAAEC,QAAQ,EAAGK,CAAC,IAAK;QACxD,IAAIA,CAAC,CAACC,KAAK,EAAEb,WAAW,CAACc,IAAI,CAACC,KAAK,CAAEH,CAAC,CAACI,MAAM,GAAG,GAAG,GAAIJ,CAAC,CAACC,KAAK,CAAC,CAAC;MAClE,CAAC,CAAC;MACFX,SAAS,CAACS,QAAQ,CAACM,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ;MACA,IAAIA,GAAG,CAACP,QAAQ,EAAE;QAAA,IAAAQ,kBAAA;QAChBf,QAAQ,CACN,UAAUc,GAAG,CAACP,QAAQ,CAACS,MAAM,KAAK,IACjC,EAAAD,kBAAA,GAAAD,GAAG,CAACP,QAAQ,CAACM,IAAI,cAAAE,kBAAA,uBAAjBA,kBAAA,CAAmBE,OAAO,KAAIC,IAAI,CAACC,SAAS,CAACL,GAAG,CAACP,QAAQ,CAACM,IAAI,CAAC,CAClE,CAAC;MACH,CAAC,MAAM,IAAIC,GAAG,CAACM,OAAO,EAAE;QACtBpB,QAAQ,CAAC,yBAAyB,CAAC;MACrC,CAAC,MAAM;QACLA,QAAQ,CAAC,QAAQ,GAAGc,GAAG,CAACG,OAAO,CAAC;MAClC;IACF,CAAC,SAAS;MACRvB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAED,SAAS;IAAEE,QAAQ;IAAEE,MAAM;IAAEE,KAAK;IAAEE;EAAO,CAAC;AACvD,CAAC;AAACT,EAAA,CApCID,SAAS;AAsCf,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}