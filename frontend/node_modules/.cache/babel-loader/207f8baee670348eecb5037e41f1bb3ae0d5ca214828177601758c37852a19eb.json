{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { uploadAudio } from '../services/api';\nconst useUpload = () => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const upload = async file => {\n    setUploading(true);\n    setProgress(0);\n    setError(null);\n    setResult(null);\n    try {\n      const response = await uploadAudio(file, e => {\n        if (e.total) setProgress(Math.round(e.loaded * 100 / e.total));\n      });\n      setResult(response.data.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || '上傳失敗');\n    } finally {\n      setUploading(false);\n    }\n  };\n  return {\n    uploading,\n    progress,\n    result,\n    error,\n    upload\n  };\n};\n_s(useUpload, \"42Am1O6PtBgKl7IWzP3lerihfVc=\");\nexport default useUpload;","map":{"version":3,"names":["useState","uploadAudio","useUpload","_s","uploading","setUploading","progress","setProgress","result","setResult","error","setError","upload","file","response","e","total","Math","round","loaded","data","err","_err$response","_err$response$data","message"],"sources":["/Users/wenhsu/Documents/my_project/whisper/frontend/src/hooks/useUpload.js"],"sourcesContent":["import { useState } from 'react';\nimport { uploadAudio } from '../services/api';\n\nconst useUpload = () => {\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  const upload = async (file) => {\n    setUploading(true);\n    setProgress(0);\n    setError(null);\n    setResult(null);\n    try {\n      const response = await uploadAudio(file, (e) => {\n        if (e.total) setProgress(Math.round((e.loaded * 100) / e.total));\n      });\n      setResult(response.data.data);\n    } catch (err) {\n      setError(err.response?.data?.message || '上傳失敗');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return { uploading, progress, result, error, upload };\n};\n\nexport default useUpload;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,iBAAiB;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,MAAM,GAAG,MAAOC,IAAI,IAAK;IAC7BR,YAAY,CAAC,IAAI,CAAC;IAClBE,WAAW,CAAC,CAAC,CAAC;IACdI,QAAQ,CAAC,IAAI,CAAC;IACdF,SAAS,CAAC,IAAI,CAAC;IACf,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMb,WAAW,CAACY,IAAI,EAAGE,CAAC,IAAK;QAC9C,IAAIA,CAAC,CAACC,KAAK,EAAET,WAAW,CAACU,IAAI,CAACC,KAAK,CAAEH,CAAC,CAACI,MAAM,GAAG,GAAG,GAAIJ,CAAC,CAACC,KAAK,CAAC,CAAC;MAClE,CAAC,CAAC;MACFP,SAAS,CAACK,QAAQ,CAACM,IAAI,CAACA,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZZ,QAAQ,CAAC,EAAAW,aAAA,GAAAD,GAAG,CAACP,QAAQ,cAAAQ,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,MAAM,CAAC;IACjD,CAAC,SAAS;MACRnB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAED,SAAS;IAAEE,QAAQ;IAAEE,MAAM;IAAEE,KAAK;IAAEE;EAAO,CAAC;AACvD,CAAC;AAACT,EAAA,CAxBID,SAAS;AA0Bf,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}